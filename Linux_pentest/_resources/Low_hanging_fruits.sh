#!/bin/bash

echo "AVA Linux testing - low-hanging fruits"
echo "======================================"

## Versions
echo "# Versions"
echo "## Antique kernel or distribution?"
echo "\`\`\`\`" 
uname -a
echo "\`\`\`\`" 
echo " - if kernel is 3.19.0-73.8 or older, check Dirty COW / CVE-2016-5195 via searchsploit"
echo " - if distro older than 2019, check Big UID / CVE-2018-19788 via systemd-run '-'t /bin/bash"
echo "## Antique sudo version?"
echo " - if sudo older than v1.28, check sudo exploit via sudo -u#-1 /bin/bash"
echo "\`\`\`\`" 
sudo --version
echo "\`\`\`\`" 

# Programs
echo "# Programs"
echo "## GTFOBins?"
echo "Check if GTFObins (https://gtfobins.github.io/) are present amongst the following privileged binaries:"
echo "### SUID binaries:"
echo "\`\`\`\`" 
find / -perm -u=s -type f 2&>1
echo "\`\`\`\`" 
echo "### Programs runnable with sudo:"
echo "\`\`\`\`" 
sudo -l
echo "\`\`\`\`" 
# Users
echo "# Users"
echo "## Bad sudoers config?"
echo "Check if:" 
echo " - potential attackers are sudoers" 
echo " - potential attackers are in a group able to sudo"
echo " - it is possible to sudo without a password"
echo " - sudo is allowed on a PATH defined without ignore_dot" 
echo "\`\`\`\`" 
cat /etc/sudoers
echo "\`\`\`\`" 
# Resources
echo "# Resources"
echo "Writable or missing folders in PATH:" 
echo "\`\`\`\`" 
for dir in ${PATH//:/ }; do
    [ -L "$dir" ] && printf "%b" "symlink, "
    if [ ! -d "$dir" ]; then
        printf "%b" "missing\t\t"
    elif [ "$(ls -lLd $dir | grep '^d.......w. ')" ]; then
        printf "%b" "world writable\t"
    else
        printf "%b" "ok\t\t"
    fi
    printf "%b" "$dir\n"
done
echo "\`\`\`\`" 
echo "Warning: please manually check blunders in the order within the PATH, e.g. whether some of the directories that are writable can override non-writable ones"
# Services
echo "# Services"
echo "Services running as root:"
echo "\`\`\`\`" 
ps -elf | grep root
echo "\`\`\`\`" 
echo "Check is writable cron resources can be exploited"
echo "\`\`\`\`" 
for user in $(cut -f1 -d: /etc/passwd); do
    echo "Crontab for $user:"
    sudo crontab -u $user -l 2>/dev/null
    echo ""
done
echo "\`\`\`\`" 
# File system and drives
echo "# File system and drives"
echo "## Filesystem"
echo "Check the presence of world-writable directories without the sticky bit set."
echo "\`\`\`\`" 
find / -type d \( -perm -g+w -o -perm -o+w \) -not -perm -a+t -exec ls -lad {} \; 2>/dev/null
echo "\`\`\`\`" 
echo "## Drives"
echo "\`\`\`\`" 
ls /dev 2>/dev/null | grep -i "sd"
cat /etc/fstab 2>/dev/null | grep -v "^#" | grep -Pv "\W*\#" 2>/dev/null
echo "\`\`\`\`" 
echo "Check if credentials are defined in fstab" 
echo "\`\`\`\`" 
grep -E "user|username|login|pass|password|pw|credentials" /etc/fstab /etc/mtab 2>/dev/null
echo "\`\`\`\`" 


